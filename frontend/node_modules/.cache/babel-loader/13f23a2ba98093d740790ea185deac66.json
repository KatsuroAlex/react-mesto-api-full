{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._cardsUrl = `${this._baseUrl}/cards`;\n    this._userUrl = `${this._baseUrl}/users/me`;\n    this._avatarUrl = `${this._baseUrl}/users/me/avatar`;\n    this._likesUrl = `${this._baseUrl}/cards/cardId/likes`;\n    this._headers = headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    return res.json();\n  } //////// загружаем карточки с сервера\n\n\n  getInitialCards() {\n    return fetch(this._cardsUrl, {\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  } //////// загружаем данные пользователя с сервера\n\n\n  getProfileData() {\n    return fetch(this._userUrl, {\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  } //////// сохраняем данные пользователя (профиль) на сервере\n\n\n  saveProfileInfo(_ref2) {\n    let {\n      name,\n      about\n    } = _ref2;\n    return fetch(this._userUrl, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about\n      })\n    }).then(res => this._getResponseData(res));\n  } //////// сохраняем аватар пользователя (профиль) на сервере\n\n\n  saveProfileAvatar(src) {\n    return fetch(this._avatarUrl, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: src.link\n      })\n    }).then(res => this._getResponseData(res));\n  } //////// добавляем новую карточку на сервер\n\n\n  postNewCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return fetch(this._cardsUrl, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    }).then(res => this._getResponseData(res));\n  } ///////удаление карточки пользователя с сервера\n\n\n  deleteCard(id) {\n    console.log(id);\n    return fetch(`${this._cardsUrl}/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  } ////////установка лайка карточке\n\n\n  setLike(cardId) {\n    return fetch(`${this._cardsUrl}/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  } ////////удаление лайка с карточки\n\n\n  removeLike(cardId) {\n    return fetch(`${this._cardsUrl}/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._getResponseData(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-50\",\n  headers: {\n    authorization: \"0cd386ae-1830-42e7-aefa-1c5dfe1b78a1\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","baseUrl","headers","_baseUrl","_cardsUrl","_userUrl","_avatarUrl","_likesUrl","_headers","_getResponseData","res","ok","Promise","reject","status","json","getInitialCards","fetch","then","getProfileData","saveProfileInfo","name","about","method","body","JSON","stringify","saveProfileAvatar","src","avatar","link","postNewCard","deleteCard","id","console","log","setLike","cardId","removeLike","api","authorization"],"sources":["/Users/alexandrkatsuro/Downloads/mesto-react/src/utils/Api.js"],"sourcesContent":["\n\n\n\n\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._cardsUrl = `${this._baseUrl}/cards`;\n    this._userUrl = `${this._baseUrl}/users/me`;\n    this._avatarUrl = `${this._baseUrl}/users/me/avatar`;\n    this._likesUrl = `${this._baseUrl}/cards/cardId/likes`;\n    this._headers = headers;\n  }\n\n  _getResponseData(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  //////// загружаем карточки с сервера\n  getInitialCards() {\n    return fetch(this._cardsUrl, {\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //////// загружаем данные пользователя с сервера\n  getProfileData() {\n    return fetch(this._userUrl, {\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //////// сохраняем данные пользователя (профиль) на сервере\n  saveProfileInfo({ name, about }) {\n    return fetch(this._userUrl, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: about,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //////// сохраняем аватар пользователя (профиль) на сервере\n  saveProfileAvatar(src) {\n    return fetch(this._avatarUrl, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: src.link,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  //////// добавляем новую карточку на сервер\n  postNewCard({ name, link }) {\n    return fetch(this._cardsUrl, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        link: link,\n      }),\n    }).then((res) => this._getResponseData(res));\n  }\n\n  ///////удаление карточки пользователя с сервера\n  deleteCard(id) {\n    console.log(id);\n    return fetch(`${this._cardsUrl}/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  ////////установка лайка карточке\n  setLike(cardId) {\n    return fetch(`${this._cardsUrl}/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n\n  ////////удаление лайка с карточки\n  removeLike(cardId) {\n    return fetch(`${this._cardsUrl}/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-50\",\n  headers: {\n    authorization: \"0cd386ae-1830-42e7-aefa-1c5dfe1b78a1\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}