{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data); // .then(res => {\n  //   if (res.ok) {\n  //     return res.json();\n  //   }\n  //   return Promise.reject(`Ошибка: ${res.status}`);\n  // })\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","login","response","e","catch","err","console","log","checkToken","token","data"],"sources":["/Users/alexandrkatsuro/Downloads/Yandex_practicum/dev/Project-work-12/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email,\n    })\n  })\n  .then((res) => {\n    if(res.ok) {\n        return res.json()\n      } else { return Promise.reject(`Ошибка: ${res.status}`)\n    }\n  })\n}; \n\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email,\n    })\n  })\n  .then((response) => {\n    try {\n      if (response.status === 200){\n        return response.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n}\n\nexport const checkToken = (token) => {\nreturn fetch(`${BASE_URL}/users/me`, {\n  method: 'GET',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    'Authorization': `Bearer ${token}`,\n  }\n})\n.then(res => res.json())\n.then(data => data)\n\n\n// .then(res => {\n//   if (res.ok) {\n//     return res.json();\n//   }\n//   return Promise.reject(`Ошибка: ${res.status}`);\n// })\n}"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB;IAFT,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,QADmB;MAEnBC;IAFmB,CAAf;EAN2B,CAAvB,CAAL,CAWNO,IAXM,CAWAC,GAAD,IAAS;IACb,IAAGA,GAAG,CAACC,EAAP,EAAW;MACP,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD,CAFH,MAES;MAAE,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;IACV;EACF,CAhBM,CAAP;AAiBD,CAlBM;AAoBP,OAAO,MAAMC,KAAK,GAAG,CAACf,QAAD,EAAWC,KAAX,KAAqB;EACxC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB;IAFT,CAFwB;IAMjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,QADmB;MAEnBC;IAFmB,CAAf;EAN2B,CAAvB,CAAL,CAWNO,IAXM,CAWAQ,QAAD,IAAc;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACF,MAAT,KAAoB,GAAxB,EAA4B;QAC1B,OAAOE,QAAQ,CAACL,IAAT,EAAP;MACD;IACF,CAJD,CAIE,OAAMM,CAAN,EAAQ;MACR,OAAQA,CAAR;IACD;EACF,CAnBM,EAoBNT,IApBM,CAoBAC,GAAD,IAAS;IACb,OAAOA,GAAP;EACD,CAtBM,EAuBNS,KAvBM,CAuBCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAvBT,CAAP;AAwBD,CAzBM;AA2BP,OAAO,MAAMG,UAAU,GAAIC,KAAD,IAAW;EACrC,OAAOrB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB,kBAFT;MAGP,iBAAkB,UAASmB,KAAM;IAH1B;EAF0B,CAAzB,CAAL,CAQNf,IARM,CAQDC,GAAG,IAAIA,GAAG,CAACE,IAAJ,EARN,EASNH,IATM,CASDgB,IAAI,IAAIA,IATP,CAAP,CADqC,CAarC;EACA;EACA;EACA;EACA;EACA;AACC,CAnBM"},"metadata":{},"sourceType":"module"}