{"ast":null,"code":"// export const BASE_URL = \"https://auth.nomoreparties.co\";\nimport { BASE_URL } from \"./Url\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n};\nexport const logout = token => {\n  return fetch(`${BASE_URL}/logout`, {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json;\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const checkToken = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    credentials: 'include',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data); //   // .then(res => {\n  //   //   if (res.ok) {\n  //   //     return res.json();\n  //   //   }\n  //   //   return Promise.reject(`Ошибка: ${res.status}`);\n  //   // })\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","credentials","headers","Accept","body","JSON","stringify","then","res","ok","json","Promise","reject","status","login","response","e","catch","err","console","log","logout","token","checkToken","Authorization","data"],"sources":["/Users/alexandrkatsuro/Downloads/Yandex_practicum/dev/project-work-15/react-mesto-api-full/frontend/src/utils/auth.js"],"sourcesContent":["// export const BASE_URL = \"https://auth.nomoreparties.co\";\nimport { BASE_URL } from \"./Url\";\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password,\n      email,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\n\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      password,\n      email,\n    }),\n  })\n    .then((response) => {\n      try {\n        if (response.status === 200) {\n          return response.json();\n        }\n      } catch (e) {\n        return e;\n      }\n    })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(err));\n};\n\nexport const logout = (token) => {\n  return fetch(`${BASE_URL}/logout`,{\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(res => {\n    if (res.ok) {\n      return res.json;\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n}\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    credentials: 'include',\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => data);\n\n//   // .then(res => {\n//   //   if (res.ok) {\n//   //     return res.json();\n//   //   }\n//   //   return Promise.reject(`Ошибка: ${res.status}`);\n//   // })\n};\n"],"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,KAAX,KAAqB;EAC3C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,WAAW,EAAE,SAFoB;IAGjCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAHwB;IAOjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBT,QADmB;MAEnBC;IAFmB,CAAf;EAP2B,CAAvB,CAAL,CAWJS,IAXI,CAWEC,GAAD,IAAS;IACf,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD,CAFD,MAEO;MACL,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;IACD;EACF,CAjBM,CAAP;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,KAAK,GAAG,CAACjB,QAAD,EAAWC,KAAX,KAAqB;EACxC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;IACjCK,MAAM,EAAE,MADyB;IAEjCC,WAAW,EAAE,SAFoB;IAGjCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB;IAFT,CAHwB;IAOjCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBT,QADmB;MAEnBC;IAFmB,CAAf;EAP2B,CAAvB,CAAL,CAYJS,IAZI,CAYEQ,QAAD,IAAc;IAClB,IAAI;MACF,IAAIA,QAAQ,CAACF,MAAT,KAAoB,GAAxB,EAA6B;QAC3B,OAAOE,QAAQ,CAACL,IAAT,EAAP;MACD;IACF,CAJD,CAIE,OAAOM,CAAP,EAAU;MACV,OAAOA,CAAP;IACD;EACF,CApBI,EAqBJT,IArBI,CAqBEC,GAAD,IAAS;IACb,OAAOA,GAAP;EACD,CAvBI,EAwBJS,KAxBI,CAwBGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAxBX,CAAP;AAyBD,CA1BM;AA4BP,OAAO,MAAMG,MAAM,GAAIC,KAAD,IAAW;EAC/B,OAAOvB,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAsB;IAChCK,MAAM,EAAE,KADwB;IAEhCC,WAAW,EAAE,SAFmB;IAGhCC,OAAO,EAAE;MACP,UAAU,kBADH;MAEP,gBAAgB,kBAFT;MAGP,iBAAkB,UAASoB,KAAM;IAH1B;EAHuB,CAAtB,CAAL,CASNf,IATM,CASDC,GAAG,IAAI;IACX,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAX;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD,CAdM,CAAP;AAeD,CAhBM;AAkBP,OAAO,MAAMU,UAAU,GAAID,KAAD,IAAW;EACnC,OAAOvB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACnCK,MAAM,EAAE,KAD2B;IAEnCC,WAAW,EAAE,SAFsB;IAGnCC,OAAO,EAAE;MACPC,MAAM,EAAE,kBADD;MAEP,gBAAgB,kBAFT;MAGPqB,aAAa,EAAG,UAASF,KAAM;IAHxB;EAH0B,CAAzB,CAAL,CASJf,IATI,CASEC,GAAD,IAASA,GAAG,CAACE,IAAJ,EATV,EAUJH,IAVI,CAUEkB,IAAD,IAAUA,IAVX,CAAP,CADmC,CAarC;EACA;EACA;EACA;EACA;EACA;AACC,CAnBM"},"metadata":{},"sourceType":"module"}