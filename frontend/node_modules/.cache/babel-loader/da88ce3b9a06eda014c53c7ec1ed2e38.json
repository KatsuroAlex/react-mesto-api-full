{"ast":null,"code":"// export const BASE_URL = \"https://auth.nomoreparties.co\";\nimport { BASE_URL } from \"./Url\";\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      password,\n      email\n    })\n  }).then(response => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(data => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data.token;\n    }\n  }) // .then((response) => {\n  //   try {\n  //     if (response.status === 200) {\n  //       return response.json();\n  //     }\n  //   } catch (e) {\n  //     return e;\n  //   }\n  // })\n  // .then((token) => {\n  //   if (token) {\n  //     localStorage.setItem('token', token)\n  //     return token\n  //   }\n  // })\n  // .then((res) => {\n  //   return res.json;\n  // })\n  .catch(err => console.log(err));\n}; // export const authorize = (password, email) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     credentials: 'include',\n//     method: 'POST',\n//     headers: {\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({password, email})\n//   })\n//   .then(handleResponse)\n//   .then((data) => {\n//     if (data.token) {\n//       localStorage.setItem('jwt', data.token)\n//       return data.token\n//     }\n//   })\n// }\n\nexport const logout = token => {\n  return fetch(`${BASE_URL}/logout`, {\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      // 'Accept': 'application/json',\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => {\n    if (res.ok) {\n      return res.json;\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    credentials: 'include',\n    headers: {\n      'Content-Type': \"application/json\",\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()); // .then((data) => data);\n  //   // .then(res => {\n  //   //   if (res.ok) {\n  //   //     return res.json();\n  //   //   }\n  //   //   return Promise.reject(`Ошибка: ${res.status}`);\n  //   // })\n};","map":{"version":3,"names":["BASE_URL","register","password","email","fetch","method","credentials","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","status","login","response","e","data","token","localStorage","setItem","catch","err","console","log","logout","getContent"],"sources":["/Users/alexandrkatsuro/Downloads/Yandex_practicum/dev/project-work-15/react-mesto-api-full/frontend/src/utils/auth.js"],"sourcesContent":["// export const BASE_URL = \"https://auth.nomoreparties.co\";\nimport { BASE_URL } from \"./Url\";\n\nexport const register = (password, email) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: \"POST\",\n    credentials: 'include',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password,\n      email,\n    }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n  });\n};\n\nexport const login = (password, email) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: {\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      password,\n      email,\n    }),\n  })\n\n  .then((response) => {\n    try {\n      if (response.status === 200) {\n        return response.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  })\n  .then((data) => {\n    if (data.token) {\n      localStorage.setItem('token', data.token);\n      return data.token;\n    }\n  })\n\n    // .then((response) => {\n    //   try {\n    //     if (response.status === 200) {\n    //       return response.json();\n    //     }\n    //   } catch (e) {\n    //     return e;\n    //   }\n    // })\n\n    // .then((token) => {\n    //   if (token) {\n    //     localStorage.setItem('token', token)\n    //     return token\n    //   }\n    // })\n    // .then((res) => {\n    //   return res.json;\n    // })\n    .catch((err) => console.log(err));\n};\n\n// export const authorize = (password, email) => {\n//   return fetch(`${BASE_URL}/signin`, {\n//     credentials: 'include',\n//     method: 'POST',\n//     headers: {\n//       \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({password, email})\n//   })\n//   .then(handleResponse)\n//   .then((data) => {\n//     if (data.token) {\n//       localStorage.setItem('jwt', data.token)\n//       return data.token\n//     }\n//   })\n// }\n\n\n\n\n\n\nexport const logout = (token) => {\n  return fetch(`${BASE_URL}/logout`,{\n    method: 'GET',\n    credentials: 'include',\n    headers: {\n      // 'Accept': 'application/json',\n      // 'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`,\n    }\n  })\n  .then(res => {\n    if (res.ok) {\n      return res.json;\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  })\n}\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: \"GET\",\n    credentials: 'include',\n    headers: {\n      'Content-Type': \"application/json\",\n      'Authorization': `Bearer ${token}`,\n    },\n  })\n    .then((res) => res.json())\n    // .then((data) => data);\n\n\n//   // .then(res => {\n//   //   if (res.ok) {\n//   //     return res.json();\n//   //   }\n//   //   return Promise.reject(`Ошибка: ${res.status}`);\n//   // })\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}