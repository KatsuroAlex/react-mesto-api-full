{"ast":null,"code":"var _jsxFileName = \"/Users/alexandrkatsuro/Downloads/Yandex_practicum/dev/project-work-15/react-mesto-api-full/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/Api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport * as auth from \"../utils/auth.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory();\n  const [isInfoTooltip, setInfoTooltip] = useState({\n    isOpen: false,\n    ok: false\n  });\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [isEditProfilePopupOpen, setEditProfileClick] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditAcceptPopupOpen, setEditAcceptPopupOpen] = useState(false);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({\n    isOpen: false,\n    element: {}\n  }); // получаем данные карточек при загрузке страницы\n  // useEffect(() => {\n  //   api\n  //     .getInitialCards()\n  //     .then((data) => {\n  //       setCards(data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n\n  useEffect(() => {\n    if (loggedIn) {\n      api.getInitialCards().then(data => {\n        setCards(data);\n      }).catch(err => console.log(err));\n    }\n  }, [loggedIn]); //при загрузке если получаем пользователя то перенаправляем его\n  // useEffect(() => {\n  //   api\n  //     .getProfileData()\n  //     .then((data) => {\n  //       setCurrentUser(data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n\n  useEffect(() => {\n    api.getProfileData().then(data => {\n      handleLoggedIn();\n      setEmail(data.email);\n      setCurrentUser(data);\n      history.push(\"/\");\n    }).catch(err => console.log(err));\n  }, [history, loggedIn]);\n\n  function handleCardClick(card) {\n    setSelectedCard({\n      isOpen: true,\n      element: card\n    });\n  }\n\n  function handleInfoTooltip(res) {\n    setInfoTooltip({ ...isInfoTooltip,\n      isOpen: true,\n      ok: res\n    });\n  }\n\n  function handleLoggedIn() {\n    setLoggedIn(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfileClick(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setEditAcceptPopupOpen(false);\n    setSelectedCard({\n      isOpen: false,\n      element: {}\n    });\n    setInfoTooltip(false);\n  } // обновляем пользователя\n\n\n  function handleUpdateUser(newUserData) {\n    api.setUserInfo(newUserData).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // Обновляем аватар\n\n\n  function handleUpdateAvatar(newAvatarLink) {\n    api.setUserAvatar(newAvatarLink).then(data => {\n      setCurrentUser({\n        currentUser,\n        avatar: data.avatar\n      });\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } // добавляем новую карточку\n\n\n  function handleAddPlaceSubmit(cardData) {\n    api.postNewCard(cardData).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    // const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    const isLiked = card.likes.some(i => i === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.log(err);\n    });\n  } // удаление карточки\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards => cards.filter(c => c._id !== card._id));\n      closeAllPopups();\n    }).catch(err => {\n      console.log(err);\n    });\n  } ////////Запрос на регистрирацию пользователя\n\n\n  function handleRegister(password, email) {\n    auth.register(password, email).then(data => {\n      if (data) {\n        handleInfoTooltip(true);\n        history.push(\"/sign-in\");\n      }\n    }).catch(err => {\n      console.log(err);\n      handleInfoTooltip(false);\n    });\n  } ////////Запрос на вход пользователя\n\n\n  function handleLogin(password, email) {\n    auth.login(password, email).then(data => {\n      if (data.token) {\n        setEmail(email);\n        handleLoggedIn(); // localStorage.setItem(\"token\", data.token);\n\n        history.push(\"/\");\n      }\n    }).catch(err => {\n      handleInfoTooltip(false);\n      console.log(err);\n    });\n  } // /////Проверка токена\n  // useEffect(() => {\n  //   const token = localStorage.getItem(\"token\");\n  //   if (token) {\n  //     auth.checkToken(token).then((data) => {\n  //       if (data) {\n  //         setEmail(data.data.email);\n  //         handleLoggedIn();\n  //         history.push(\"/\");\n  //       }\n  //     });\n  //   }\n  // }, [history]);\n  //////////Обработка выхода пользователя\n\n\n  function handleSignOut() {\n    // localStorage.removeItem(\"token\");\n    auth.logout().then(res => {\n      setLoggedIn(false);\n      setEmail(\"\");\n      history.push(\"/sign-in\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        email: email,\n        onSignOut: handleSignOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          loggedIn: loggedIn,\n          component: Main,\n          currentUser: currentUser,\n          cards: cards,\n          onEditProfile: () => setEditProfileClick(true),\n          onEditAvatar: () => setEditAvatarPopupOpen(true),\n          onAddPlace: () => setAddPlacePopupOpen(true),\n          onCardClick: handleCardClick,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        onClose: closeAllPopups,\n        result: isInfoTooltip\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"accept\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        onClose: closeAllPopups,\n        isOpen: isEditAcceptPopupOpen,\n        buttonTitle: \"\\u0414\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"bDov0fOU50C0p30mMvpI8BLXnBM=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","Main","Footer","PopupWithForm","ImagePopup","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Switch","Route","Redirect","useHistory","ProtectedRoute","Login","Register","InfoTooltip","auth","App","history","isInfoTooltip","setInfoTooltip","isOpen","ok","loggedIn","setLoggedIn","email","setEmail","isEditProfilePopupOpen","setEditProfileClick","isAddPlacePopupOpen","setAddPlacePopupOpen","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditAcceptPopupOpen","setEditAcceptPopupOpen","currentUser","setCurrentUser","cards","setCards","selectedCard","setSelectedCard","element","getInitialCards","then","data","catch","err","console","log","getProfileData","handleLoggedIn","push","handleCardClick","card","handleInfoTooltip","res","closeAllPopups","handleUpdateUser","newUserData","setUserInfo","handleUpdateAvatar","newAvatarLink","setUserAvatar","avatar","handleAddPlaceSubmit","cardData","postNewCard","newCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","filter","handleRegister","password","register","handleLogin","login","token","handleSignOut","logout"],"sources":["/Users/alexandrkatsuro/Downloads/Yandex_practicum/dev/project-work-15/react-mesto-api-full/frontend/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/Api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\nimport EditProfilePopup from \"./EditProfilePopup.js\";\nimport EditAvatarPopup from \"./EditAvatarPopup.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\n\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport InfoTooltip from \"./InfoTooltip.js\";\nimport * as auth from \"../utils/auth.js\";\n\nfunction App() {\n  const history = useHistory();\n  const [isInfoTooltip, setInfoTooltip] = useState({isOpen: false, ok: false});\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [email, setEmail] = useState(\"\");\n\n  const [isEditProfilePopupOpen, setEditProfileClick] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\n  const [isEditAcceptPopupOpen, setEditAcceptPopupOpen] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState({\n    isOpen: false,\n    element: {},\n  });\n\n\n\n\n  // получаем данные карточек при загрузке страницы\n  \n  // useEffect(() => {\n  //   api\n  //     .getInitialCards()\n  //     .then((data) => {\n  //       setCards(data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n  useEffect(() => {\n    if(loggedIn){\n      api.getInitialCards()\n      .then((data) => {\n        setCards(data);\n      })\n      .catch((err) => console.log(err));\n    }\n  }, [loggedIn]);\n\n\n  //при загрузке если получаем пользователя то перенаправляем его\n  // useEffect(() => {\n  //   api\n  //     .getProfileData()\n  //     .then((data) => {\n  //       setCurrentUser(data);\n  //     })\n  //     .catch((err) => console.log(err));\n  // }, []);\n  useEffect(() => {\n    api\n      .getProfileData()\n      .then((data) => {\n        handleLoggedIn();\n        setEmail(data.email);\n        setCurrentUser(data);\n        history.push(\"/\");\n      })\n      .catch((err) => console.log(err));\n  }, [history, loggedIn]);\n\n\n  function handleCardClick(card) {\n    setSelectedCard({ isOpen: true, element: card });\n  }\n\n  function handleInfoTooltip(res) {\n    setInfoTooltip({ ...isInfoTooltip, isOpen: true, ok: res });\n  }\n\n  function handleLoggedIn() {\n    setLoggedIn(true);\n  }\n\n  function closeAllPopups() {\n    setEditProfileClick(false);\n    setAddPlacePopupOpen(false);\n    setEditAvatarPopupOpen(false);\n    setEditAcceptPopupOpen(false);\n    setSelectedCard({ isOpen: false, element: {} });\n    setInfoTooltip(false);\n  }\n\n\n\n  // обновляем пользователя\n  function handleUpdateUser(newUserData) {\n    api\n      .setUserInfo(newUserData)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // Обновляем аватар\n  function handleUpdateAvatar(newAvatarLink) {\n    api\n      .setUserAvatar(newAvatarLink)\n      .then((data) => {\n        setCurrentUser({ currentUser, avatar: data.avatar });\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // добавляем новую карточку\n  function handleAddPlaceSubmit(cardData) {\n    api\n      .postNewCard(cardData)\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    // const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    const isLiked = card.likes.some((i) => i === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  // удаление карточки\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        setCards((cards) => cards.filter((c) => c._id !== card._id));\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  ////////Запрос на регистрирацию пользователя\n  function handleRegister(password, email) {\n    auth\n      .register(password, email)\n      .then((data) => {\n        if (data) {\n          handleInfoTooltip(true);\n          history.push(\"/sign-in\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        handleInfoTooltip(false);\n      });\n  }\n\n  ////////Запрос на вход пользователя\n  function handleLogin(password, email) {\n    auth\n      .login(password, email)\n      .then((data) => {\n        if (data.token) {\n          setEmail(email);\n          handleLoggedIn();\n          // localStorage.setItem(\"token\", data.token);\n          history.push(\"/\");\n        }\n      })\n      .catch((err) => {\n        handleInfoTooltip(false);\n        console.log(err);\n      });\n  }\n\n  // /////Проверка токена\n  // useEffect(() => {\n  //   const token = localStorage.getItem(\"token\");\n  //   if (token) {\n  //     auth.checkToken(token).then((data) => {\n  //       if (data) {\n  //         setEmail(data.data.email);\n  //         handleLoggedIn();\n  //         history.push(\"/\");\n  //       }\n  //     });\n  //   }\n  // }, [history]);\n\n  //////////Обработка выхода пользователя\n  function handleSignOut() {\n    // localStorage.removeItem(\"token\");\n    auth.logout()\n      .then(res => {\n        setLoggedIn(false);\n        setEmail(\"\");\n        history.push(\"/sign-in\");\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header email={email} onSignOut={handleSignOut} />\n\n        <Switch>\n          <ProtectedRoute\n            exact\n            path=\"/\"\n            loggedIn={loggedIn}\n            component={Main}\n            currentUser={currentUser}\n            cards={cards}\n            onEditProfile={() => setEditProfileClick(true)}\n            onEditAvatar={() => setEditAvatarPopupOpen(true)}\n            onAddPlace={() => setAddPlacePopupOpen(true)}\n            onCardClick={handleCardClick}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n          />\n\n          <Route path=\"/sign-in\">\n            <Login onLogin={handleLogin} />\n          </Route>\n\n          <Route path=\"/sign-up\">\n            <Register onRegister={handleRegister} />\n          </Route>\n\n          <Route>\n            {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n          </Route>\n        </Switch>\n        <Footer />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <InfoTooltip onClose={closeAllPopups} result={isInfoTooltip} />\n\n        <EditProfilePopup\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n        />\n\n        <EditAvatarPopup\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar}\n        />\n\n        <AddPlacePopup\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n        />\n\n        <PopupWithForm\n          name=\"accept\"\n          title=\"Вы уверены?\"\n          onClose={closeAllPopups}\n          isOpen={isEditAcceptPopupOpen}\n          buttonTitle=\"Да\"\n        ></PopupWithForm>\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}